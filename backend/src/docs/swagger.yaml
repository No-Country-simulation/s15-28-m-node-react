openapi: 3.0.3
info:
  title: s15-28-m-node-react
  version: 1.0.0
  description: |-
    [NameApp] Freelance es una plataforma innovadora diseñada para optimizar la gestión de proyectos y tareas de freelancers. Con [NameApp] Freelance, los profesionales independientes pueden manejar eficientemente múltiples proyectos simultáneamente, lo que les permite maximizar su productividad y aumentar sus ingresos.

    Esta api realiza: 
    - Operaciones CRUD, para el manejo de los datos de los usuarios.
    - Operaciones de autenticación, para el acceso de usuarios y de la consulta.

    Algunos links de interés:
    - [![](https://img.shields.io/badge/Repositorio-76908e?logo=github)](https://github.com/No-Country/s15-28-m-node-react)
    - [![Deploy](https://vercel.com/button)]()

servers:
  - url: http://localhost:3000/api/v1
    description: Development server

tags:
  - name: User
    description: Operations about user
  - name: Auth
    description: Operations about authentication

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: apikey

security:
  - ApiKeyAuth: []

paths:
  /auth/login:
    post:
      summary: Login a user
      tags: [Auth]
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: User's email address
                  example: user@example.com
                password:
                  type: string
                  description: User's password
                  example: yourPassword123
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El inicio de sesión ha sido exitoso.
                  token:
                    type: string
                    description: JWT token for authenticated requests
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid request parameters
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El email no está asociado a ningún usuario. O La contraseña es incorrecta.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El inicio de sesión tiene un error interno del Servidor.
  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        description: User registration data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: User's first name
                  example: John
                last_name:
                  type: string
                  description: User's last name
                  example: Smith
                email:
                  type: string
                  description: User's email address
                  example: user@example.com
                password:
                  type: string
                  description: User's password
                  example: yourPassword123
                phone:
                  type: string
                  description: User's phone number
                  example: +1 123-456-7890
                birthdate:
                  type: string
                  description: User's birthdate
                  example: 05/22/1999
                role_id:
                  type: number
                  description: User's role ID (1 or 2) (1 = freelancer, 2 = client)
                  example: 1
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully.
                  userId:
                    type: string
                    description: The ID of the newly registered user
                    example: 12345
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid request parameters
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El registro de usuario tiene un error interno del Servidor.
  /user:
    get:
      summary: Get all users
      tags:
        - User
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lista de usuarios realizada con éxito.
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          example: 12345678-1234-1234-1234-111111111111
                        first_name:
                          type: string
                          example: John
                        last_name:
                          type: string
                          example: Smith
                        email:
                          type: string
                          example: johndoe@example.com
                        avatar:
                          type: string
                          example: https://example.com/avatar.jpg
                        phone:
                          type: string
                          example: +1 123-456-7890
                        birthdate:
                          type: string
                          example: 05/22/1999
                        role_id:
                          type: number
                          example: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Listado de los usuarios tiene un error interno del Servidor
  /user/{id}:
    get:
      summary: Get a user by ID
      tags:
        - User
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 12345678-1234-1234-1234-111111111111
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    example: 12345678-1234-1234-1234-111111111111
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Smith
                  email:
                    type: string
                    example: johndoe@example.com
                  avatar:
                    type: string
                    example: https://example.com/avatar.jpg
                  phone:
                    type: string
                    example: +1 123-456-7890
                  birthdate:
                    type: string
                    example: 05/22/1999
                  role_id:
                    type: number
                    example: 1
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Usuario no encontrado.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error interno del servidor.
    put:
      summary: Update a user
      tags:
        - User
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 12345678-1234-1234-1234-111111111111
      requestBody:
        description: User update data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: User's first name
                  example: John
                last_name:
                  type: string
                  description: User's last name
                  example: Smith
                email:
                  type: string
                  description: User's email address
                  example: user@example.com
                phone:
                  type: string
                  description: User's phone number
                  example: +1 123-456-7890
                birthdate:
                  type: string
                  description: User's birthdate
                  example: 05/22/1999
                role_id:
                  type: number
                  description: User's role ID (1 or 2) (1 = freelancer, 2 = client)
                  example: 1
              required: false
      responses:
        '200':
          description: User successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User updated successfully.
                  userId:
                    type: string
                    description: The ID of the updated user
                    example: 12345
        '400':
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Usuario no encontrado.
        '404':
          description: Usuario no se pudo actualizar.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Usuario no se pudo actualizar.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error interno del servidor.
    delete:
      summary: Delete a user
      tags:
        - User
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 12345678-1234-1234-1234-111111111111
      responses:
        '200':
          description: El usuario ha sido eliminado con éxito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El usuario ha sido eliminado con exito.
        '404':
          description: El usuario no ha sido encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El usuario no ha sido encontrado.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: La eliminación del usuario tiene un error interno del Servidor.
